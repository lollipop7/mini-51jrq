<style lang='scss'>
    page {
      background: #F0F1F2;
      .resume-container {
        .head {
          background: white;
          display: flex;
          flex-direction: column;
          align-items: center;
          border-top: #f1f1f1 2rpx solid;
          image {
            width: 140rpx;
            height: 140rpx;
            margin-top: 20rpx;
          }
          view {
            color: #b2b2b2;
            font-size: 24rpx;
            margin-top: 10rpx;
            margin-bottom: 20rpx;
          }
        }
        .resume-gray-line {
          height: 1px;
          background: #f1f1f1;
          margin:auto 28rpx;
        }
        .add-btn {
          width: 236rpx;
          position: relative;
          margin: 10rpx auto;
          image {
            width: 236rpx;
            height: 68rpx;
            color: black;
            font-size: 24rpx;
          }
          .btn-word {
            position: absolute;
            color: white;
            font-size: 24rpx;
            top: 10rpx;
            left: 30rpx;
          }
        }
        .info-container {
          margin-top: 15rpx;
          background: white;
          .title-container {
            padding: 12rpx 28rpx;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            font-size: 28rpx;
            .title {
              color: #353535;
            }
            .edit {
              color: #FF9E00;
            }
          }
          .name-container {
            display: flex;
            flex-direction: row;
            align-items: center;
            margin: 12rpx 28rpx;
            .name {
              font-size: 34rpx;
              color: #282828;
            }
            image {
              width: 28rpx;
              height: 28rpx;
              margin-left: 16rpx;
            }
          }
          .small-info {
            margin: auto 28rpx;
            font-size: 22rpx;
            color: #888888;
            padding-bottom: 12rpx;
          }
          .intro-container {
            padding: 12rpx 28rpx;
            font-size: 26rpx;
            color: #888888;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            .edit {
              color: #FF9E00;
            }
            .hukou {
              display: flex;
              flex-direction: row;
              width: 50%;
              .result {
                color: #353535;
              }
            }
            .color-word {
              color: #353535;
            }
            .time {
              font-size: 24rpx;
              color: #b2b2b2;
            }
          }
          .yellow-title {
            color: #FF9E00;
            font-size: 28rpx;
            margin: auto 28rpx;
          }
        }
      }
    }
</style>

<template>
  <view class="resume-container">
      <view class="head">
        <image bindtap="changeHeadPic" src="{{headimg}}" wx:if="{{headimg != (''||undefined)}}"></image>
        <image bindtap="changeHeadPic" src="/images/icons/upload_head.png" wx:else="{{headimg != (''||undefined)}}"></image>
        <view>点击上传头像</view>
      </view>
      <!-- 基本信息 -->
      <view class="info-container">
        <view class="title-container">
          <view class="title">基本信息 | 必填</view>
          <view class="edit" bindtap="goBaseInfo({{resumeid}})">编辑</view>
        </view>
        <view class="resume-gray-line"></view>
        <view class="name-container">
          <view class="name">{{baseInfo.username}}</view>
          <image src="/images/icons/male.png" wx:if="{{sex}}"></image>
          <image src="/images/icons/female.png" wx:else="{{sex}}"></image>
        </view>
        <view class="small-info">25岁 | {{baseInfo.livecityid}} | {{baseInfo.workyears}} | 本科</view>
        <view class="intro-container">
          <view class="hukou"><view>户口：</view><view class="result">{{baseInfo.address}}</view></view>
          <view class="hukou"><view>婚姻状况：</view><view class="result">{{baseInfo.marital}}</view></view>
        </view>
        <view class="intro-container">
          <view>手机：</view>
          <view class="color-word">{{baseInfo.telephone}}</view>
        </view>
        <view class="intro-container">
          <view>邮箱：</view>
          <view class="color-word">{{baseInfo.email}}</view>
        </view>
        <view class="resume-gray-line"></view>
        <view class="intro-container">
          <view>工作状态：</view>
          <view class="color-word">{{baseInfo.jobstatus}}</view>
        </view>
      </view>
      <!-- 求职意向 -->
      <view class="info-container">
        <view class="title-container">
          <view class="title">求职意向 | 必填</view>
          <view class="edit" bindtap="goJobWant({{resumeid}})">编辑</view>
        </view>
        <view class="resume-gray-line"></view>
        <view class="intro-container">
          <view class="color-word">{{jobApply.functions}} | {{jobApply.postids}}</view>
        </view>
        <view class="small-info">{{jobApply.jobnature}} / {{jobApply.sitecity}} / {{jobApply.expectsalarycode}} / {{jobApply.poststime}}</view>
      </view>
      <!-- 自我评价 -->
      <view class="info-container">
        <view class="title-container">
          <view class="title">自我评价 | 必填</view>
          <view class="edit" bindtap="goJobWant({{resumeid}})">编辑</view>
        </view>
        <view class="resume-gray-line"></view>
        <view class="intro-container">
          <view>
            {{jobApply.selfremark}}
          </view>
        </view>
      </view>
      <!-- 工作经历 -->
      <view class="info-container">
        <view class="title-container">
          <view class="title">工作经历 | 必填</view>
        </view>
        <view class="resume-gray-line"></view>
        <repeat for="{{workExper}}" key="index" index="index" item="item"> 
          <view class="job-container">
            <view class="intro-container">
              <view class="time"> {{item.starttime}} - {{item.endtime}} </view>
              <view class="edit" bindtap="goWorkExper({{item.workid}},{{resumeid}})">编辑</view>
            </view>
            <view class="yellow-title"> {{item.corpname}} </view>
            <view class="small-info">{{item.postcode}}</view>
            <view class="intro-container">
              <view>
                {{item.workremark}}
              </view>
            </view>
            <view class="resume-gray-line"></view>
          </view>
        </repeat>
        <view class="add-btn">
          <image src="/images/icons/long_btn.png"></image>
          <view class="btn-word" bindtap="goWorkExper(undefined,{{resumeid}})">+ 添加工作经历</view>
        </view>
      </view>
      <!-- 教育经历 -->
      <view class="info-container">
        <view class="title-container">
          <view class="title">教育经历 | 必填</view>
        </view>
        <view class="resume-gray-line"></view>
        <repeat for="{{eduExper}}" key="index" index="index" item="item"> 
          <view class="job-container">
            <view class="intro-container">
              <view class="time"> {{item.starttime}} - {{item.endtime}} </view>
              <view class="edit" bindtap="goEduExper({{item.educationid}},{{resumeid}})">编辑</view>
            </view>
            <view class="yellow-title"> {{item.school}} </view>
            <view class="intro-container">
              <view>{{item.specialtyid}} | {{item.educationbg}}</view>
            </view>
            <view class="resume-gray-line"></view>
          </view>
        </repeat>
        <view class="add-btn">
          <image src="/images/icons/long_btn.png"></image>
          <view class="btn-word" bindtap="goEduExper(undefined,{{resumeid}})">+ 添加教育经历</view>
        </view>
      </view>
      <!-- 项目经验 -->
      <view class="info-container">
        <view class="title-container">
          <view class="title">项目经验</view>
        </view>
        <view class="resume-gray-line"></view>
        <repeat for="{{projectExper}}" key="index" index="index" item="item"> 
          <view class="job-container">
            <view class="yellow-title" style="margin-top:12rpx;"> {{item.projectname}} </view>
            <view class="intro-container">
              <view class="time"> {{item.starttime}} - {{item.endtime}} </view>
              <view class="edit" bindtap="goProjectExper({{item.projectid}},{{resumeid}})">编辑</view>
            </view>
            <view class="intro-container">
              <view>
                {{item.projectremark}}
              </view>
            </view>
            <view class="resume-gray-line"></view>
          </view>
        </repeat>
        <view class="add-btn">
          <image src="/images/icons/long_btn.png"></image>
          <view class="btn-word" bindtap="goProjectExper(undefined,{{resumeid}})">+ 添加项目经验</view>
        </view>
      </view>
      <!-- 证书 -->
      <view class="info-container">
        <view class="title-container">
          <view class="title">证书</view>
        </view>
        <view class="resume-gray-line"></view>
        <repeat for="{{certificate}}" key="index" index="index" item="item"> 
          <view class="job-container">
            <view class="yellow-title" style="margin-top:12rpx;"> {{item.certname}} </view>
            <view class="intro-container">
              <view class="time">{{item.gaintime}} 颁发</view>
              <view class="edit" bindtap="goCert({{item.certid}},{{resumeid}})">编辑</view>
            </view>
            <view class="resume-gray-line"></view>
          </view>
        </repeat>
        <view class="add-btn">
          <image src="/images/icons/long_btn.png"></image>
          <view class="btn-word" bindtap="goCert(undefined,{{resumeid}})">+ 添加资格证书</view>
        </view>
      </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '../../api/api';
import tip from '../../utils/tip';

export default class resumePage extends wepy.page {

  config = {
      navigationBarTitleText: '我的简历',
  }

  data = {
    baseInfo: {},      // 基本信息
    jobApply: {},      // 求职意向
    workExper: {},     // 工作经历
    eduExper: {},      // 教育经历
    projectExper: {},  // 项目经验
    certificate: {},    // 证书
    sex: true,
    token: '',
    tokenKey: '',
    headimg: '',
    resumeid: ''
  }

  onLoad() { 
    
    const that = this;
    wx.getStorage({
      key: 'resumeid',
      success: function(res) {
        that.resumeid = res.data;
        that.$apply();
        // 获取登录信息
        wx.getStorage({
            key: 'loginData',
            success: function(res) {
                that.token = res.data.token;
                that.tokenKey = res.data.tokenKey;
                that.headimg = res.data.data.headimg;
                that.$apply();
                // 获取简历信息
                const arr = ["M0003","M0004","M0005","M0006","M0008","M0010"]
                arr.forEach((item,index) => {
                  switch (item)
                  {
                  case "M0003":// 基本信息
                    that.getJobInfo(item, that.resumeid, that.token, that.tokenKey).then(json => {
                      if (json.data.returnCode == "AAAAAAA") {
                        that.baseInfo = JSON.parse(json.data.data);
                        that.sex = (that.baseInfo.sex == "男");
                        console.log(baseInfo)
                        that.$apply();
                      } else {
                        tip.error(json.returnMsg);
                      }
                    })
                    break;
                  case "M0004":// 求职意向
                    that.getJobInfo(item, that.resumeid, that.token, that.tokenKey).then(json => {
                      if (json.data.returnCode == "AAAAAAA") {
                        that.jobApply = JSON.parse(json.data.data);
                        that.$apply();
                      } else {
                        tip.error(json.returnMsg);
                      }
                    })
                    break;
                  case "M0005":// 工作经历
                    that.getJobInfo(item, that.resumeid, that.token, that.tokenKey).then(json => {
                      if (json.data.returnCode == "AAAAAAA") {
                        that.workExper = JSON.parse(json.data.data);
                        that.$apply();
                      } else {
                        tip.error(json.returnMsg);
                      }
                    })
                    break;
                  case "M0006":// 教育经历
                    that.getJobInfo(item, that.resumeid, that.token, that.tokenKey).then(json => {
                      if (json.data.returnCode == "AAAAAAA") {
                        that.eduExper = JSON.parse(json.data.data);
                        that.$apply();
                      } else {
                        tip.error(json.returnMsg);
                      }
                    })
                    break;
                  case "M0008":// 项目经验
                    that.getJobInfo(item, that.resumeid, that.token, that.tokenKey).then(json => {
                      if (json.data.returnCode == "AAAAAAA") {
                        that.projectExper = JSON.parse(json.data.data);
                        that.$apply();
                      } else {
                        tip.error(json.returnMsg);
                      }
                    })
                    break;
                  case "M0010":// 证书
                    that.getJobInfo(item, that.resumeid, that.token, that.tokenKey).then(json => {
                      if (json.data.returnCode == "AAAAAAA") {
                        that.certificate = JSON.parse(json.data.data);
                        that.$apply();
                      } else {
                        tip.error(json.returnMsg);
                      }
                    })
                    break;
                  }
                });
            } 
        })
      },
      fail:function(res){
        console.log(res)
      }
    })
  }
  methods = {

        // 基本信息编辑新增
        goBaseInfo (resumeid) {
            wx.navigateTo({
                url: `base_info?resumeid=${resumeid}`
            })
        },

        // 求职意向
        goJobWant (resumeid) {
            wx.navigateTo({
                url: `job_want?resumeid=${resumeid}`
            })
        },

        // 工作经历
        goWorkExper (workid, resumeid) {
            wx.navigateTo({
                url: `work_exper?workid=${workid}&resumeid=${resumeid}`
            })
        },

        // 教育经历
        goEduExper (educationid, resumeid) {
            wx.navigateTo({
                url: `edu_exper?educationid=${educationid}&resumeid=${resumeid}`
            })
        },

        // 项目经验
        goProjectExper (projectid, resumeid) {
            wx.navigateTo({
                url: `project_exper?projectid=${projectid}&resumeid=${resumeid}`
            })
        },

        // 证书
        goCert (certid, resumeid) {
            wx.navigateTo({
                url: `certificate?certid=${certid}&resumeid=${resumeid}`
            })
        },

        // 修改头像
        changeHeadPic () {  
          var that = this;  
          wx.chooseImage({  
            count: 9, // 默认9  
            sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有  
            sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有  
            success: function (res) {  
              var imgsrc = res.tempFilePaths[0];
              that.changPic(that.token,that.tokenKey,imgsrc).then(data => {
                console.log(22121211,data)
              })
            }  
          })  
        }  

    };
  
    //获取公司详情数据
  async getJobInfo(code,resumeid,token,tokenKey) {
    const json = await api.getResumeInfo({
      query: {
        head: {
          "transcode": code,
          "type": "h"
        },
        data: {
          "token": token,
          "tokenKey": tokenKey,
          "resumeid": resumeid
        }
      }
    })
    return json;
  }

  //修改头像
  async changPic(token,tokenKey,imgsrc) {
    const json = await api.getResumeInfo({
      query: {
        head:{
          "type":"i",
          "transcode":"P0038"
          },
        data:{
          "imgsrc": imgsrc,
          "imgtype":"png",
          "tokenKey":tokenKey,
          "token":token
        }
      }
    })
    return json;
  }

}
</script>