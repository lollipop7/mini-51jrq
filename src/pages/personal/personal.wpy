<style lang='scss'>
    page {  
        background-color: #F0F1F2;  
        .personal-container {
            display: flex;
            flex-direction: column;
            position: relative;
            .personal-info {
                background-color: white;
                margin: 10rpx 0;
                display: flex;
                flex-direction: row;
                align-items: center;
                padding: 20rpx 28rpx;
                image {
                    width: 80rpx;
                    height: 80rpx;
                }
                .name-intro {
                    margin-left: 20rpx;
                    .name {
                        font-size: 34rpx;
                        color: #333333;
                        font-weight: 600;
                    }
                    .intro {
                        margin-top: 4rpx;
                        font-size: 24rpx;
                        color: #888888;
                    }
                    .intro2 {
                        margin-top: 4rpx;
                        font-size: 30rpx;
                        color: #888888;
                    }
                }
            }
            .my-function {
                background-color: white;
                display: flex;
                flex-direction: column;
                padding: 0 28rpx;
            }
            .fun-line {
                display: flex;
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                padding: 20rpx 0;
                border-bottom: 1rpx solid #F1F1F1;
                .img-title {
                    display: flex;
                    flex-direction: row;
                    align-items: center;
                    image {
                        width: 36rpx;
                        height: 36rpx;
                        margin-right: 20rpx;
                    }
                    text {
                        color: rgba(53, 53, 53, 1);
                        font-size: 28rpx;
                    }
                }
                .percent-arrow {
                    display: flex;
                    flex-direction: row;
                    align-items: center;
                    .percentage { 
                        width: 100rpx;
                        height: 28rpx;
                        border-radius: 28rpx;
                        border: 1rpx solid #EC6955;
                        color: #EC6955;
                        font-size: 28rpx;
                        text-align: center;
                        line-height: 28rpx;
                        margin-right: 20rpx;
                    }
                    view {
                        width: 100rpx;
                        height: 28rpx;
                        font-size: 28rpx;
                        text-align: center;
                        line-height: 28rpx;
                        margin-right: 20rpx;
                    }
                    image {
                        width: 10rpx;
                        height: 16rpx;
                    }
                }
            }
            .exit {
                color: #353535;
                font-size: 28rpx;
                line-height: 80rpx;
                background: white;
                text-align: center;
                line-height: 80rpx;
                margin-top: 20rpx;
            }
            .alert-container {
                position: fixed;
                width: 100%;
                height: 100vh;
                background: black;
                opacity: 0.5;
            }
            .alert-box{
                width: 560rpx;
                height: 290rpx;
                background: white;
                position: absolute;
                top: 50%;
                left: 50%;
                margin-left: -280rpx;
                border-radius: 20rpx;
                z-index: 9999;
                display: flex;
                flex-direction: column;
                align-items: center;
                .sure {
                    width: 100%;
                    height: 190rpx;
                    font-size: 36rpx;
                    line-height: 190rpx;
                    border-bottom: 1rpx solid #e5e5e5;
                    text-align: center;
                }
                .yesno {
                    display: flex;
                    flex-direction: row;
                    text-align: center;
                    line-height: 100rpx;
                    .no {
                        width: 280rpx;
                        color: #b2b2b2;
                        border-right: 1rpx solid #e5e5e5;
                    }
                    .yes {
                        width: 280rpx;
                        color: #ff9e00;
                    }
                }
            }
        }
    }  
    
</style>

<template>
  <view class="personal-container">
      <view class="personal-info">
          <image src="{{headimg}}" wx:if="{{headimgStatus}}"></image>
          <image src="/images/icons/upload_head.png" wx:else="{{headimgStatus}}"></image>
          <view class="name-intro" wx:if="{{loginStatus}}">
              <view class="name">{{username}}</view>
              <view class="intro">{{jobname}}</view>
          </view>
          <view class="name-intro" wx:else="{{loginStatus}}">
              <view class="intro2"><text bindtap="goLoginPage">登录</text>  / <text bindtap="goRegistPage">注册</text> </view>
          </view>
      </view>
      <view class="my-function">
          <view class="fun-line" bindtap="goResumePage({{resumeid}})">
            <view class="img-title">
                <image src="/images/icons/resume.png"></image>
                <text>我的简历</text>
            </view>
            <view class="percent-arrow">
                <view class="percentage">{{percentage}}</view>
                <image src="/images/icons/arrow_right.png"></image>
            </view>
        </view>
        <view class="fun-line" bindtap="goDeliveryPage">
            <view class="img-title">
                <image src="/images/icons/delivery.png"></image>
                <text>投递状态</text>
            </view>
            <view class="percent-arrow">
                <view></view>
                <image src="/images/icons/arrow_right.png"></image>
            </view>
        </view> 
        <view class="fun-line" bindtap="goCollectionPage">
            <view class="img-title">
                <image src="/images/icons/collection.png"></image>
                <text>我的收藏</text>
            </view>
            <view class="percent-arrow">
                <view></view>
                <image src="/images/icons/arrow_right.png"></image>
            </view>
        </view>
      </view>
      <view class="exit" bindtap="logout" wx:if="{{loginStatus}}">
          退出登录
      </view>
    <view class="alert-container" wx:if = "{{showbox}}"></view>
    <view class="alert-box" wx:if = "{{showbox}}">
        <view class="sure">确认退出登录？</view>
        <view class="yesno">
            <view class="no" bindtap="cancel">取消</view>
            <view class="yes" bindtap="yes">确定</view>
        </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '../../api/api';
const utils = require('../../utils/utils');

export default class PersPage extends wepy.page {
    data = {
        // 简历完成百分比
        percentage: '0%',
        username:'暂无',
        headimg:'',
        headimgStatus:false,
        jobname:'',
        token:'',
        tokenKey:'',
        have: true,
        resumeid: '',
        showbox: false,
        loginStatus: false
    }
    onLoad() {
        console.log('load')
        

    }
    onShow(){
        console.log('show')
        // 获取登录信息
        const that = this;
        wx.getStorage({
            key: 'loginData',
            success: function(res) {
                console.log(res)
                that.loginStatus = true;
                that.token = res.data.token;
                that.tokenKey = res.data.tokenKey;
                that.username = res.data.data.username;
                that.headimg = res.data.data.headimg;
                that.jobname = res.data.data.jobname;
                if(!res.data.data.companyname || !res.data.data.jobname){
                    that.have = false;
                }
                if(res.data.data.headimg){
                    that.headimgStatus = true;
                }
                that.$apply();
                // 获取简历列表
                that.getResumeList().then(data=>{
                    if(data.data.returnCode == "AAAAAAA") {
                        that.resumeid = JSON.parse(data.data.data)[0].resumeid
                        // 存储信息到本地
                        wx.setStorage({
                            key:'resumeid', 
                            data:that.resumeid
                        });
                        that.$apply();
                        that.getIntegrity(that.resumeid).then(data=>{
                            if(data.data.returnCode == "AAAAAAA") {
                                let result = JSON.parse(data.data.data)[0];
                                delete result.resumeid;
                                let addResult = 0;
                                for (var key in result){
                                    addResult += result[key]
                                }
                                that.percentage = addResult + '%';
                                that.$apply();
                            }else{
                               console.log('getIntegrity',data) 
                            }
                        })
                    }else{
                        // 清空本地信息
                        wx.clearStorage()
                        that.headimgStatus=false;
                        that.have = false;
                        that.loginStatus = false;
                        that.$apply();
                    }
                })
            },
            fail: function(res) {
                // 清空本地信息
                wx.clearStorage()
                that.headimgStatus=false;
                that.have = false;
                that.loginStatus = false;
                that.$apply();
            }
        })
    }
    methods = {

        // 跳转我的简历
        goResumePage () {
            // 未登录跳转登录页
            utils.goLogin()
            if(this.loginStatus){
                wx.navigateTo({
                    url: `resume`
                })
            }
        },

        // 跳转投递状态
        goDeliveryPage () {
            // 未登录跳转登录页
            utils.goLogin()
            if(this.loginStatus){
                wx.navigateTo({
                    url: `delivery`
                })
            }
        },

        // 跳转我的收藏
        goCollectionPage () {
            // 未登录跳转登录页
            utils.goLogin()
            if(this.loginStatus){
                wx.navigateTo({
                    url: `collection`
                })
            }
        },

        // 退出登录
        logout () {
            this.showbox = true;
        },

        // 取消
        cancel () {
            this.showbox = false;
        },

        // 确定
        yes () {
            // 清空本地信息
            wx.clearStorage()
            // 跳转登录页
            wx.navigateTo({
                url: `/pages/login/login`
            })
        },

        // 跳转登录页
        goLoginPage () {
            wx.navigateTo({
                url: `/pages/login/login`
            })
        },

        // 跳转注册页
        goRegistPage () {
            wx.navigateTo({
                url: `/pages/login/regist`
            })
        }

    };
    onHide(){
        this.showbox = false;
    }
    //获取简历列表
    async getResumeList() {
        const json = await api.getCollectJob({
        query: {
                head: {
                    "transcode": "P0001",
                    "type": "h"
                },
                data: {
                    "token": this.token,
                    "tokenKey": this.tokenKey
                }
            }
        })
        return json;
    }

    //完整度查询
    async getIntegrity(resumeid) {
        const json = await api.getResumeInfo({
        query: {
                head: {
                    "transcode": "M0002",
                    "type": "h"
                },
                data: {
                    "token": this.token,
                    "tokenKey": this.tokenKey,
                    "resumeid": resumeid
                }
            }
        })
        return json;
    }
}
</script>